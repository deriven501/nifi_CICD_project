- name: Update Nifi Properties
  connection: local
  hosts: nifi
  become: yes
  vars:
    nifi_properties_file:  /var/lib/jenkins/workspace/nifi_fullProcess/nifi_CICD_project/nifi/nifi-assembly/target/nifi-1.26.0/conf/nifi.properties # Adjust path
    nifi_home: /var/lib/jenkins/workspace/nifi_fullProcess/nifi_CICD_project/nifi/nifi-assembly/target/nifi-1.26.0/
    nifi_start_file: /var/lib/jenkins/workspace/nifi_fullProcess/nifi_CICD_project/nifi/nifi-assembly/target/nifi-1.26.0/bin/nifi.sh
    nifi_file_name: nifi-1.26.0-bin
    java_home: /usr/lib/jvm/java-17-openjdk-amd64

  tasks:
    # - name: Update APT cache
    #   apt:
    #     update_cache: yes

    # - name: Install OpenJDK 17
    #   apt:
    #     name: openjdk-17-jdk
    #     state: present

    # - name: Verify Java version
    #   command: java -version
    #   register: java_output
    #   ignore_errors: true

    # - name: Print Java version
    #   debug:
    #     var: java_output.stdout_lines 

    # - name: Set JAVA_HOME system-wide for all users
    #   lineinfile:
    #     path: /etc/profile.d/java_home.sh
    #     line: "export JAVA_HOME={{ java_home }}"
    #     create: yes
    #     state: present

    # - name: Install unzip
    #   apt:
    #     name: unzip
    #     state: present

    # - name: Unzip nifi folder
    #   ansible.builtin.unarchive:
    #     src: /home/ubuntu/nifi-1.26.0-bin.zip
    #     dest: /home/ubuntu
    #     remote_src: yes

    # - name: Set permissions on NiFi home
    #   file:
    #     path: "{{ nifi_home }}"
    #     owner: ubuntu
    #     group: ubuntu
    #     recurse: yes

    - name: Configure nifi.properties for HTTP and Site-to-Site
      block:
        # Comment out https host and port
        - name: Comment out nifi.web.https.host
          lineinfile:
            path: "{{ nifi_properties_file }}"
            regexp: '^nifi.web.https.host='
            line: '#nifi.web.https.host=127.0.0.1'
            backrefs: yes


        - name: Comment out nifi.web.https.port
          lineinfile:
            path: "{{ nifi_properties_file }}"
            regexp: '^nifi.web.https.port='
            line: '#nifi.web.https.port=8443'
            backrefs: yes

        # Set nifi.remote.input.secure to false
        - name: Set nifi.remote.input.secure to false
          lineinfile:
            path: "{{ nifi_properties_file }}"
            regexp: '^nifi.remote.input.secure='
            line: 'nifi.remote.input.secure=false'
            backrefs: yes

        # Empty the given security properties
        - name: Clear specified NiFi security properties (make their values empty)
          loop:
            - nifi.security.keystore
            - nifi.security.truststore
            - nifi.security.keystoreType
            - nifi.security.keystorePasswd
            - nifi.security.keyPasswd
            - nifi.security.truststoreType
            - nifi.security.truststorePasswd
          ansible.builtin.lineinfile:
            path: "{{ nifi_properties_file }}"
            regexp: '^{{ item | regex_escape() }}='
            line: '{{ item }}='
            create: yes
            backrefs: yes

        - name: Set nifi.web.http.network.interface.default
          lineinfile:
            path: "{{ nifi_properties_file }}"
            regexp: '^nifi\.web\.http\.network\.interface\.default='
            line: 'nifi.web.http.network.interface.default='
            create: yes

        - name: Comment out HTTPS and security props
          replace:
            path: "{{ nifi_properties_file }}"
            regexp: '^(nifi\.web\.https\.host=.*|nifi\.web\.https\.port=.*|nifi\.security\..*)'
            replace: '#\1'

        - name: Set nifi.remote.input.socket.port empty
          lineinfile:
            path: "{{ nifi_properties_file }}"
            regexp: '^nifi\.remote\.input\.socket\.port='
            line: 'nifi.remote.input.socket.port='
            create: yes

        - name: Set nifi.remote.input.http.enabled true
          lineinfile:
            path: "{{ nifi_properties_file }}"
            regexp: '^nifi\.remote\.input\.http\.enabled='
            line: 'nifi.remote.input.http.enabled=true'
            create: yes

        - name: Set nifi.remote.input.http.transaction.ttl
          lineinfile:
            path: "{{ nifi_properties_file }}"
            regexp: '^nifi\.remote\.input\.http\.transaction\.ttl='
            line: 'nifi.remote.input.http.transaction.ttl=30 sec'
            create: yes

        - name: Set nifi.remote.contents.cache.expiration
          lineinfile:
            path: "{{ nifi_properties_file }}"
            regexp: '^nifi\.remote\.contents\.cache\.expiration='
            line: 'nifi.remote.contents.cache.expiration=30 secs'
            create: yes
      delegate_to: 127.0.0.1